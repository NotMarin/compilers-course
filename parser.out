Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSOLUTE
    AND
    ARRAY
    DESTRUCTOR
    DISTINT
    DIV
    DOUBLEQUOTE
    FLOAT
    FUNCTION
    GREATER
    GREATEREQUAL
    IF
    IN
    INPUT
    INTEGER
    INTERFACE
    LABEL
    LBLOCK
    LBRACKET
    LESS
    LESSEQUAL
    NIL
    OBJECT
    OR
    OUTPUT
    PRIVATE
    QUOTE
    RBLOCK
    RBRACKET
    READ
    READLN
    REPEAT
    SHL
    STRING
    THEN
    UNIT
    UNTIL
    VIRTUAL
    WHILE
    WRITE
    WRITELN
    XOR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON uses_clause_opt block DOT
Rule 2     uses_clause_opt -> uses_clause
Rule 3     uses_clause_opt -> empty
Rule 4     unit_list -> unit_list COMMA ID
Rule 5     unit_list -> ID
Rule 6     uses_clause -> USES unit_list SEMICOLON
Rule 7     block -> declarations compound_statement
Rule 8     declarations -> declaration_list
Rule 9     declarations -> empty
Rule 10    declaration_list -> declaration_list declaration
Rule 11    declaration_list -> declaration
Rule 12    declaration -> var_declaration
Rule 13    declaration -> const_declaration
Rule 14    declaration -> procedure_declaration
Rule 15    var_declaration -> VAR var_declaration_list
Rule 16    var_declaration_list -> var_declaration_list var_decl
Rule 17    var_declaration_list -> var_decl
Rule 18    var_decl -> id_list COLON ID SEMICOLON
Rule 19    id_list -> id_list COMMA ID
Rule 20    id_list -> ID
Rule 21    const_declaration -> CONST const_list
Rule 22    const_list -> const_list const_definition SEMICOLON
Rule 23    const_list -> const_definition SEMICOLON
Rule 24    const_definition -> ID EQUAL constant
Rule 25    compound_statement -> BEGIN statement_list END
Rule 26    statement_list -> statement
Rule 27    statement_list -> statement_list SEMICOLON statement
Rule 28    statement -> simple_statement
Rule 29    statement -> compound_statement
Rule 30    simple_statement -> assignment_statement
Rule 31    simple_statement -> for_statement
Rule 32    simple_statement -> empty
Rule 33    for_statement -> FOR ID ASSIGNMENT expression direction expression DO statement
Rule 34    direction -> TO
Rule 35    direction -> DOWNTO
Rule 36    assignment_statement -> ID EQUAL expression
Rule 37    expression -> expression PLUS expression
Rule 38    expression -> expression MINUS expression
Rule 39    expression -> expression TIMES expression
Rule 40    expression -> expression DIVIDE expression
Rule 41    expression -> LPAREN expression RPAREN
Rule 42    expression -> ID
Rule 43    expression -> NUMBER
Rule 44    constant -> NUMBER
Rule 45    constant -> STRING_LITERAL
Rule 46    constant -> CHARACTER_LITERAL
Rule 47    constant -> BOOLEAN_LITERAL
Rule 48    procedure_declaration -> PROCEDURE ID LPAREN parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON
Rule 49    parameters -> parameter_list
Rule 50    parameters -> empty
Rule 51    parameter_list -> parameter_list SEMICOLON parameter
Rule 52    parameter_list -> parameter
Rule 53    parameter -> id_list COLON ID
Rule 54    empty -> <empty>

Terminals, with rules where they appear

ABSOLUTE             : 
AND                  : 
ARRAY                : 
ASSIGNMENT           : 33
BEGIN                : 25
BOOLEAN_LITERAL      : 47
CHARACTER_LITERAL    : 46
COLON                : 18 53
COMMA                : 4 19
CONST                : 21
DESTRUCTOR           : 
DISTINT              : 
DIV                  : 
DIVIDE               : 40
DO                   : 33
DOT                  : 1
DOUBLEQUOTE          : 
DOWNTO               : 35
END                  : 25
EQUAL                : 24 36
FLOAT                : 
FOR                  : 33
FUNCTION             : 
GREATER              : 
GREATEREQUAL         : 
ID                   : 1 4 5 18 19 20 24 33 36 42 48 53
IF                   : 
IN                   : 
INPUT                : 
INTEGER              : 
INTERFACE            : 
LABEL                : 
LBLOCK               : 
LBRACKET             : 
LESS                 : 
LESSEQUAL            : 
LPAREN               : 41 48
MINUS                : 38
NIL                  : 
NUMBER               : 43 44
OBJECT               : 
OR                   : 
OUTPUT               : 
PLUS                 : 37
PRIVATE              : 
PROCEDURE            : 48
PROGRAM              : 1
QUOTE                : 
RBLOCK               : 
RBRACKET             : 
READ                 : 
READLN               : 
REPEAT               : 
RPAREN               : 41 48
SEMICOLON            : 1 6 18 22 23 27 48 48 51
SHL                  : 
STRING               : 
STRING_LITERAL       : 45
THEN                 : 
TIMES                : 39
TO                   : 34
UNIT                 : 
UNTIL                : 
USES                 : 6
VAR                  : 15
VIRTUAL              : 
WHILE                : 
WRITE                : 
WRITELN              : 
XOR                  : 
error                : 

Nonterminals, with rules where they appear

assignment_statement : 30
block                : 1
compound_statement   : 7 29 48
const_declaration    : 13
const_definition     : 22 23
const_list           : 21 22
constant             : 24
declaration          : 10 11
declaration_list     : 8 10
declarations         : 7 48
direction            : 33
empty                : 3 9 32 50
expression           : 33 33 36 37 37 38 38 39 39 40 40 41
for_statement        : 31
id_list              : 18 19 53
parameter            : 51 52
parameter_list       : 49 51
parameters           : 48
procedure_declaration : 14
program              : 0
simple_statement     : 28
statement            : 26 27 33
statement_list       : 25 27
unit_list            : 4 6
uses_clause          : 2
uses_clause_opt      : 1
var_decl             : 16 17
var_declaration      : 12
var_declaration_list : 15 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON uses_clause_opt block DOT

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON uses_clause_opt block DOT

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON uses_clause_opt block DOT

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . uses_clause_opt block DOT
    (2) uses_clause_opt -> . uses_clause
    (3) uses_clause_opt -> . empty
    (6) uses_clause -> . USES unit_list SEMICOLON
    (54) empty -> .

    USES            shift and go to state 8
    VAR             reduce using rule 54 (empty -> .)
    CONST           reduce using rule 54 (empty -> .)
    PROCEDURE       reduce using rule 54 (empty -> .)
    BEGIN           reduce using rule 54 (empty -> .)

    uses_clause_opt                shift and go to state 5
    uses_clause                    shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID SEMICOLON uses_clause_opt . block DOT
    (7) block -> . declarations compound_statement
    (8) declarations -> . declaration_list
    (9) declarations -> . empty
    (10) declaration_list -> . declaration_list declaration
    (11) declaration_list -> . declaration
    (54) empty -> .
    (12) declaration -> . var_declaration
    (13) declaration -> . const_declaration
    (14) declaration -> . procedure_declaration
    (15) var_declaration -> . VAR var_declaration_list
    (21) const_declaration -> . CONST const_list
    (48) procedure_declaration -> . PROCEDURE ID LPAREN parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON

    BEGIN           reduce using rule 54 (empty -> .)
    VAR             shift and go to state 17
    CONST           shift and go to state 18
    PROCEDURE       shift and go to state 19

    block                          shift and go to state 9
    declarations                   shift and go to state 10
    declaration_list               shift and go to state 11
    empty                          shift and go to state 12
    declaration                    shift and go to state 13
    var_declaration                shift and go to state 14
    const_declaration              shift and go to state 15
    procedure_declaration          shift and go to state 16

state 6

    (2) uses_clause_opt -> uses_clause .

    VAR             reduce using rule 2 (uses_clause_opt -> uses_clause .)
    CONST           reduce using rule 2 (uses_clause_opt -> uses_clause .)
    PROCEDURE       reduce using rule 2 (uses_clause_opt -> uses_clause .)
    BEGIN           reduce using rule 2 (uses_clause_opt -> uses_clause .)


state 7

    (3) uses_clause_opt -> empty .

    VAR             reduce using rule 3 (uses_clause_opt -> empty .)
    CONST           reduce using rule 3 (uses_clause_opt -> empty .)
    PROCEDURE       reduce using rule 3 (uses_clause_opt -> empty .)
    BEGIN           reduce using rule 3 (uses_clause_opt -> empty .)


state 8

    (6) uses_clause -> USES . unit_list SEMICOLON
    (4) unit_list -> . unit_list COMMA ID
    (5) unit_list -> . ID

    ID              shift and go to state 21

    unit_list                      shift and go to state 20

state 9

    (1) program -> PROGRAM ID SEMICOLON uses_clause_opt block . DOT

    DOT             shift and go to state 22


state 10

    (7) block -> declarations . compound_statement
    (25) compound_statement -> . BEGIN statement_list END

    BEGIN           shift and go to state 24

    compound_statement             shift and go to state 23

state 11

    (8) declarations -> declaration_list .
    (10) declaration_list -> declaration_list . declaration
    (12) declaration -> . var_declaration
    (13) declaration -> . const_declaration
    (14) declaration -> . procedure_declaration
    (15) var_declaration -> . VAR var_declaration_list
    (21) const_declaration -> . CONST const_list
    (48) procedure_declaration -> . PROCEDURE ID LPAREN parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON

    BEGIN           reduce using rule 8 (declarations -> declaration_list .)
    VAR             shift and go to state 17
    CONST           shift and go to state 18
    PROCEDURE       shift and go to state 19

    declaration                    shift and go to state 25
    var_declaration                shift and go to state 14
    const_declaration              shift and go to state 15
    procedure_declaration          shift and go to state 16

state 12

    (9) declarations -> empty .

    BEGIN           reduce using rule 9 (declarations -> empty .)


state 13

    (11) declaration_list -> declaration .

    VAR             reduce using rule 11 (declaration_list -> declaration .)
    CONST           reduce using rule 11 (declaration_list -> declaration .)
    PROCEDURE       reduce using rule 11 (declaration_list -> declaration .)
    BEGIN           reduce using rule 11 (declaration_list -> declaration .)


state 14

    (12) declaration -> var_declaration .

    VAR             reduce using rule 12 (declaration -> var_declaration .)
    CONST           reduce using rule 12 (declaration -> var_declaration .)
    PROCEDURE       reduce using rule 12 (declaration -> var_declaration .)
    BEGIN           reduce using rule 12 (declaration -> var_declaration .)


state 15

    (13) declaration -> const_declaration .

    VAR             reduce using rule 13 (declaration -> const_declaration .)
    CONST           reduce using rule 13 (declaration -> const_declaration .)
    PROCEDURE       reduce using rule 13 (declaration -> const_declaration .)
    BEGIN           reduce using rule 13 (declaration -> const_declaration .)


state 16

    (14) declaration -> procedure_declaration .

    VAR             reduce using rule 14 (declaration -> procedure_declaration .)
    CONST           reduce using rule 14 (declaration -> procedure_declaration .)
    PROCEDURE       reduce using rule 14 (declaration -> procedure_declaration .)
    BEGIN           reduce using rule 14 (declaration -> procedure_declaration .)


state 17

    (15) var_declaration -> VAR . var_declaration_list
    (16) var_declaration_list -> . var_declaration_list var_decl
    (17) var_declaration_list -> . var_decl
    (18) var_decl -> . id_list COLON ID SEMICOLON
    (19) id_list -> . id_list COMMA ID
    (20) id_list -> . ID

    ID              shift and go to state 29

    var_declaration_list           shift and go to state 26
    var_decl                       shift and go to state 27
    id_list                        shift and go to state 28

state 18

    (21) const_declaration -> CONST . const_list
    (22) const_list -> . const_list const_definition SEMICOLON
    (23) const_list -> . const_definition SEMICOLON
    (24) const_definition -> . ID EQUAL constant

    ID              shift and go to state 32

    const_list                     shift and go to state 30
    const_definition               shift and go to state 31

state 19

    (48) procedure_declaration -> PROCEDURE . ID LPAREN parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON

    ID              shift and go to state 33


state 20

    (6) uses_clause -> USES unit_list . SEMICOLON
    (4) unit_list -> unit_list . COMMA ID

    SEMICOLON       shift and go to state 34
    COMMA           shift and go to state 35


state 21

    (5) unit_list -> ID .

    SEMICOLON       reduce using rule 5 (unit_list -> ID .)
    COMMA           reduce using rule 5 (unit_list -> ID .)


state 22

    (1) program -> PROGRAM ID SEMICOLON uses_clause_opt block DOT .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON uses_clause_opt block DOT .)


state 23

    (7) block -> declarations compound_statement .

    DOT             reduce using rule 7 (block -> declarations compound_statement .)


state 24

    (25) compound_statement -> BEGIN . statement_list END
    (26) statement_list -> . statement
    (27) statement_list -> . statement_list SEMICOLON statement
    (28) statement -> . simple_statement
    (29) statement -> . compound_statement
    (30) simple_statement -> . assignment_statement
    (31) simple_statement -> . for_statement
    (32) simple_statement -> . empty
    (25) compound_statement -> . BEGIN statement_list END
    (36) assignment_statement -> . ID EQUAL expression
    (33) for_statement -> . FOR ID ASSIGNMENT expression direction expression DO statement
    (54) empty -> .

    BEGIN           shift and go to state 24
    ID              shift and go to state 43
    FOR             shift and go to state 44
    END             reduce using rule 54 (empty -> .)
    SEMICOLON       reduce using rule 54 (empty -> .)

    statement_list                 shift and go to state 36
    statement                      shift and go to state 37
    simple_statement               shift and go to state 38
    compound_statement             shift and go to state 39
    assignment_statement           shift and go to state 40
    for_statement                  shift and go to state 41
    empty                          shift and go to state 42

state 25

    (10) declaration_list -> declaration_list declaration .

    VAR             reduce using rule 10 (declaration_list -> declaration_list declaration .)
    CONST           reduce using rule 10 (declaration_list -> declaration_list declaration .)
    PROCEDURE       reduce using rule 10 (declaration_list -> declaration_list declaration .)
    BEGIN           reduce using rule 10 (declaration_list -> declaration_list declaration .)


state 26

    (15) var_declaration -> VAR var_declaration_list .
    (16) var_declaration_list -> var_declaration_list . var_decl
    (18) var_decl -> . id_list COLON ID SEMICOLON
    (19) id_list -> . id_list COMMA ID
    (20) id_list -> . ID

    VAR             reduce using rule 15 (var_declaration -> VAR var_declaration_list .)
    CONST           reduce using rule 15 (var_declaration -> VAR var_declaration_list .)
    PROCEDURE       reduce using rule 15 (var_declaration -> VAR var_declaration_list .)
    BEGIN           reduce using rule 15 (var_declaration -> VAR var_declaration_list .)
    ID              shift and go to state 29

    var_decl                       shift and go to state 45
    id_list                        shift and go to state 28

state 27

    (17) var_declaration_list -> var_decl .

    ID              reduce using rule 17 (var_declaration_list -> var_decl .)
    VAR             reduce using rule 17 (var_declaration_list -> var_decl .)
    CONST           reduce using rule 17 (var_declaration_list -> var_decl .)
    PROCEDURE       reduce using rule 17 (var_declaration_list -> var_decl .)
    BEGIN           reduce using rule 17 (var_declaration_list -> var_decl .)


state 28

    (18) var_decl -> id_list . COLON ID SEMICOLON
    (19) id_list -> id_list . COMMA ID

    COLON           shift and go to state 46
    COMMA           shift and go to state 47


state 29

    (20) id_list -> ID .

    COLON           reduce using rule 20 (id_list -> ID .)
    COMMA           reduce using rule 20 (id_list -> ID .)


state 30

    (21) const_declaration -> CONST const_list .
    (22) const_list -> const_list . const_definition SEMICOLON
    (24) const_definition -> . ID EQUAL constant

    VAR             reduce using rule 21 (const_declaration -> CONST const_list .)
    CONST           reduce using rule 21 (const_declaration -> CONST const_list .)
    PROCEDURE       reduce using rule 21 (const_declaration -> CONST const_list .)
    BEGIN           reduce using rule 21 (const_declaration -> CONST const_list .)
    ID              shift and go to state 32

    const_definition               shift and go to state 48

state 31

    (23) const_list -> const_definition . SEMICOLON

    SEMICOLON       shift and go to state 49


state 32

    (24) const_definition -> ID . EQUAL constant

    EQUAL           shift and go to state 50


state 33

    (48) procedure_declaration -> PROCEDURE ID . LPAREN parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON

    LPAREN          shift and go to state 51


state 34

    (6) uses_clause -> USES unit_list SEMICOLON .

    VAR             reduce using rule 6 (uses_clause -> USES unit_list SEMICOLON .)
    CONST           reduce using rule 6 (uses_clause -> USES unit_list SEMICOLON .)
    PROCEDURE       reduce using rule 6 (uses_clause -> USES unit_list SEMICOLON .)
    BEGIN           reduce using rule 6 (uses_clause -> USES unit_list SEMICOLON .)


state 35

    (4) unit_list -> unit_list COMMA . ID

    ID              shift and go to state 52


state 36

    (25) compound_statement -> BEGIN statement_list . END
    (27) statement_list -> statement_list . SEMICOLON statement

    END             shift and go to state 53
    SEMICOLON       shift and go to state 54


state 37

    (26) statement_list -> statement .

    END             reduce using rule 26 (statement_list -> statement .)
    SEMICOLON       reduce using rule 26 (statement_list -> statement .)


state 38

    (28) statement -> simple_statement .

    END             reduce using rule 28 (statement -> simple_statement .)
    SEMICOLON       reduce using rule 28 (statement -> simple_statement .)


state 39

    (29) statement -> compound_statement .

    END             reduce using rule 29 (statement -> compound_statement .)
    SEMICOLON       reduce using rule 29 (statement -> compound_statement .)


state 40

    (30) simple_statement -> assignment_statement .

    END             reduce using rule 30 (simple_statement -> assignment_statement .)
    SEMICOLON       reduce using rule 30 (simple_statement -> assignment_statement .)


state 41

    (31) simple_statement -> for_statement .

    END             reduce using rule 31 (simple_statement -> for_statement .)
    SEMICOLON       reduce using rule 31 (simple_statement -> for_statement .)


state 42

    (32) simple_statement -> empty .

    END             reduce using rule 32 (simple_statement -> empty .)
    SEMICOLON       reduce using rule 32 (simple_statement -> empty .)


state 43

    (36) assignment_statement -> ID . EQUAL expression

    EQUAL           shift and go to state 55


state 44

    (33) for_statement -> FOR . ID ASSIGNMENT expression direction expression DO statement

    ID              shift and go to state 56


state 45

    (16) var_declaration_list -> var_declaration_list var_decl .

    ID              reduce using rule 16 (var_declaration_list -> var_declaration_list var_decl .)
    VAR             reduce using rule 16 (var_declaration_list -> var_declaration_list var_decl .)
    CONST           reduce using rule 16 (var_declaration_list -> var_declaration_list var_decl .)
    PROCEDURE       reduce using rule 16 (var_declaration_list -> var_declaration_list var_decl .)
    BEGIN           reduce using rule 16 (var_declaration_list -> var_declaration_list var_decl .)


state 46

    (18) var_decl -> id_list COLON . ID SEMICOLON

    ID              shift and go to state 57


state 47

    (19) id_list -> id_list COMMA . ID

    ID              shift and go to state 58


state 48

    (22) const_list -> const_list const_definition . SEMICOLON

    SEMICOLON       shift and go to state 59


state 49

    (23) const_list -> const_definition SEMICOLON .

    ID              reduce using rule 23 (const_list -> const_definition SEMICOLON .)
    VAR             reduce using rule 23 (const_list -> const_definition SEMICOLON .)
    CONST           reduce using rule 23 (const_list -> const_definition SEMICOLON .)
    PROCEDURE       reduce using rule 23 (const_list -> const_definition SEMICOLON .)
    BEGIN           reduce using rule 23 (const_list -> const_definition SEMICOLON .)


state 50

    (24) const_definition -> ID EQUAL . constant
    (44) constant -> . NUMBER
    (45) constant -> . STRING_LITERAL
    (46) constant -> . CHARACTER_LITERAL
    (47) constant -> . BOOLEAN_LITERAL

    NUMBER          shift and go to state 61
    STRING_LITERAL  shift and go to state 62
    CHARACTER_LITERAL shift and go to state 63
    BOOLEAN_LITERAL shift and go to state 64

    constant                       shift and go to state 60

state 51

    (48) procedure_declaration -> PROCEDURE ID LPAREN . parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON
    (49) parameters -> . parameter_list
    (50) parameters -> . empty
    (51) parameter_list -> . parameter_list SEMICOLON parameter
    (52) parameter_list -> . parameter
    (54) empty -> .
    (53) parameter -> . id_list COLON ID
    (19) id_list -> . id_list COMMA ID
    (20) id_list -> . ID

    RPAREN          reduce using rule 54 (empty -> .)
    ID              shift and go to state 29

    parameters                     shift and go to state 65
    parameter_list                 shift and go to state 66
    empty                          shift and go to state 67
    parameter                      shift and go to state 68
    id_list                        shift and go to state 69

state 52

    (4) unit_list -> unit_list COMMA ID .

    SEMICOLON       reduce using rule 4 (unit_list -> unit_list COMMA ID .)
    COMMA           reduce using rule 4 (unit_list -> unit_list COMMA ID .)


state 53

    (25) compound_statement -> BEGIN statement_list END .

    DOT             reduce using rule 25 (compound_statement -> BEGIN statement_list END .)
    END             reduce using rule 25 (compound_statement -> BEGIN statement_list END .)
    SEMICOLON       reduce using rule 25 (compound_statement -> BEGIN statement_list END .)


state 54

    (27) statement_list -> statement_list SEMICOLON . statement
    (28) statement -> . simple_statement
    (29) statement -> . compound_statement
    (30) simple_statement -> . assignment_statement
    (31) simple_statement -> . for_statement
    (32) simple_statement -> . empty
    (25) compound_statement -> . BEGIN statement_list END
    (36) assignment_statement -> . ID EQUAL expression
    (33) for_statement -> . FOR ID ASSIGNMENT expression direction expression DO statement
    (54) empty -> .

    BEGIN           shift and go to state 24
    ID              shift and go to state 43
    FOR             shift and go to state 44
    END             reduce using rule 54 (empty -> .)
    SEMICOLON       reduce using rule 54 (empty -> .)

    statement                      shift and go to state 70
    simple_statement               shift and go to state 38
    compound_statement             shift and go to state 39
    assignment_statement           shift and go to state 40
    for_statement                  shift and go to state 41
    empty                          shift and go to state 42

state 55

    (36) assignment_statement -> ID EQUAL . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . NUMBER

    LPAREN          shift and go to state 73
    ID              shift and go to state 71
    NUMBER          shift and go to state 74

    expression                     shift and go to state 72

state 56

    (33) for_statement -> FOR ID . ASSIGNMENT expression direction expression DO statement

    ASSIGNMENT      shift and go to state 75


state 57

    (18) var_decl -> id_list COLON ID . SEMICOLON

    SEMICOLON       shift and go to state 76


state 58

    (19) id_list -> id_list COMMA ID .

    COLON           reduce using rule 19 (id_list -> id_list COMMA ID .)
    COMMA           reduce using rule 19 (id_list -> id_list COMMA ID .)


state 59

    (22) const_list -> const_list const_definition SEMICOLON .

    ID              reduce using rule 22 (const_list -> const_list const_definition SEMICOLON .)
    VAR             reduce using rule 22 (const_list -> const_list const_definition SEMICOLON .)
    CONST           reduce using rule 22 (const_list -> const_list const_definition SEMICOLON .)
    PROCEDURE       reduce using rule 22 (const_list -> const_list const_definition SEMICOLON .)
    BEGIN           reduce using rule 22 (const_list -> const_list const_definition SEMICOLON .)


state 60

    (24) const_definition -> ID EQUAL constant .

    SEMICOLON       reduce using rule 24 (const_definition -> ID EQUAL constant .)


state 61

    (44) constant -> NUMBER .

    SEMICOLON       reduce using rule 44 (constant -> NUMBER .)


state 62

    (45) constant -> STRING_LITERAL .

    SEMICOLON       reduce using rule 45 (constant -> STRING_LITERAL .)


state 63

    (46) constant -> CHARACTER_LITERAL .

    SEMICOLON       reduce using rule 46 (constant -> CHARACTER_LITERAL .)


state 64

    (47) constant -> BOOLEAN_LITERAL .

    SEMICOLON       reduce using rule 47 (constant -> BOOLEAN_LITERAL .)


state 65

    (48) procedure_declaration -> PROCEDURE ID LPAREN parameters . RPAREN SEMICOLON declarations compound_statement SEMICOLON

    RPAREN          shift and go to state 77


state 66

    (49) parameters -> parameter_list .
    (51) parameter_list -> parameter_list . SEMICOLON parameter

    RPAREN          reduce using rule 49 (parameters -> parameter_list .)
    SEMICOLON       shift and go to state 78


state 67

    (50) parameters -> empty .

    RPAREN          reduce using rule 50 (parameters -> empty .)


state 68

    (52) parameter_list -> parameter .

    SEMICOLON       reduce using rule 52 (parameter_list -> parameter .)
    RPAREN          reduce using rule 52 (parameter_list -> parameter .)


state 69

    (53) parameter -> id_list . COLON ID
    (19) id_list -> id_list . COMMA ID

    COLON           shift and go to state 79
    COMMA           shift and go to state 47


state 70

    (27) statement_list -> statement_list SEMICOLON statement .

    END             reduce using rule 27 (statement_list -> statement_list SEMICOLON statement .)
    SEMICOLON       reduce using rule 27 (statement_list -> statement_list SEMICOLON statement .)


state 71

    (42) expression -> ID .

    PLUS            reduce using rule 42 (expression -> ID .)
    MINUS           reduce using rule 42 (expression -> ID .)
    TIMES           reduce using rule 42 (expression -> ID .)
    DIVIDE          reduce using rule 42 (expression -> ID .)
    END             reduce using rule 42 (expression -> ID .)
    SEMICOLON       reduce using rule 42 (expression -> ID .)
    RPAREN          reduce using rule 42 (expression -> ID .)
    TO              reduce using rule 42 (expression -> ID .)
    DOWNTO          reduce using rule 42 (expression -> ID .)
    DO              reduce using rule 42 (expression -> ID .)


state 72

    (36) assignment_statement -> ID EQUAL expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    END             reduce using rule 36 (assignment_statement -> ID EQUAL expression .)
    SEMICOLON       reduce using rule 36 (assignment_statement -> ID EQUAL expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 73

    (41) expression -> LPAREN . expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . NUMBER

    LPAREN          shift and go to state 73
    ID              shift and go to state 71
    NUMBER          shift and go to state 74

    expression                     shift and go to state 84

state 74

    (43) expression -> NUMBER .

    PLUS            reduce using rule 43 (expression -> NUMBER .)
    MINUS           reduce using rule 43 (expression -> NUMBER .)
    TIMES           reduce using rule 43 (expression -> NUMBER .)
    DIVIDE          reduce using rule 43 (expression -> NUMBER .)
    END             reduce using rule 43 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 43 (expression -> NUMBER .)
    RPAREN          reduce using rule 43 (expression -> NUMBER .)
    TO              reduce using rule 43 (expression -> NUMBER .)
    DOWNTO          reduce using rule 43 (expression -> NUMBER .)
    DO              reduce using rule 43 (expression -> NUMBER .)


state 75

    (33) for_statement -> FOR ID ASSIGNMENT . expression direction expression DO statement
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . NUMBER

    LPAREN          shift and go to state 73
    ID              shift and go to state 71
    NUMBER          shift and go to state 74

    expression                     shift and go to state 85

state 76

    (18) var_decl -> id_list COLON ID SEMICOLON .

    ID              reduce using rule 18 (var_decl -> id_list COLON ID SEMICOLON .)
    VAR             reduce using rule 18 (var_decl -> id_list COLON ID SEMICOLON .)
    CONST           reduce using rule 18 (var_decl -> id_list COLON ID SEMICOLON .)
    PROCEDURE       reduce using rule 18 (var_decl -> id_list COLON ID SEMICOLON .)
    BEGIN           reduce using rule 18 (var_decl -> id_list COLON ID SEMICOLON .)


state 77

    (48) procedure_declaration -> PROCEDURE ID LPAREN parameters RPAREN . SEMICOLON declarations compound_statement SEMICOLON

    SEMICOLON       shift and go to state 86


state 78

    (51) parameter_list -> parameter_list SEMICOLON . parameter
    (53) parameter -> . id_list COLON ID
    (19) id_list -> . id_list COMMA ID
    (20) id_list -> . ID

    ID              shift and go to state 29

    parameter                      shift and go to state 87
    id_list                        shift and go to state 69

state 79

    (53) parameter -> id_list COLON . ID

    ID              shift and go to state 88


state 80

    (37) expression -> expression PLUS . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . NUMBER

    LPAREN          shift and go to state 73
    ID              shift and go to state 71
    NUMBER          shift and go to state 74

    expression                     shift and go to state 89

state 81

    (38) expression -> expression MINUS . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . NUMBER

    LPAREN          shift and go to state 73
    ID              shift and go to state 71
    NUMBER          shift and go to state 74

    expression                     shift and go to state 90

state 82

    (39) expression -> expression TIMES . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . NUMBER

    LPAREN          shift and go to state 73
    ID              shift and go to state 71
    NUMBER          shift and go to state 74

    expression                     shift and go to state 91

state 83

    (40) expression -> expression DIVIDE . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . NUMBER

    LPAREN          shift and go to state 73
    ID              shift and go to state 71
    NUMBER          shift and go to state 74

    expression                     shift and go to state 92

state 84

    (41) expression -> LPAREN expression . RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 93
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 85

    (33) for_statement -> FOR ID ASSIGNMENT expression . direction expression DO statement
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (34) direction -> . TO
    (35) direction -> . DOWNTO

    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    TO              shift and go to state 95
    DOWNTO          shift and go to state 96

    direction                      shift and go to state 94

state 86

    (48) procedure_declaration -> PROCEDURE ID LPAREN parameters RPAREN SEMICOLON . declarations compound_statement SEMICOLON
    (8) declarations -> . declaration_list
    (9) declarations -> . empty
    (10) declaration_list -> . declaration_list declaration
    (11) declaration_list -> . declaration
    (54) empty -> .
    (12) declaration -> . var_declaration
    (13) declaration -> . const_declaration
    (14) declaration -> . procedure_declaration
    (15) var_declaration -> . VAR var_declaration_list
    (21) const_declaration -> . CONST const_list
    (48) procedure_declaration -> . PROCEDURE ID LPAREN parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON

    BEGIN           reduce using rule 54 (empty -> .)
    VAR             shift and go to state 17
    CONST           shift and go to state 18
    PROCEDURE       shift and go to state 19

    declarations                   shift and go to state 97
    declaration_list               shift and go to state 11
    empty                          shift and go to state 12
    declaration                    shift and go to state 13
    var_declaration                shift and go to state 14
    const_declaration              shift and go to state 15
    procedure_declaration          shift and go to state 16

state 87

    (51) parameter_list -> parameter_list SEMICOLON parameter .

    SEMICOLON       reduce using rule 51 (parameter_list -> parameter_list SEMICOLON parameter .)
    RPAREN          reduce using rule 51 (parameter_list -> parameter_list SEMICOLON parameter .)


state 88

    (53) parameter -> id_list COLON ID .

    SEMICOLON       reduce using rule 53 (parameter -> id_list COLON ID .)
    RPAREN          reduce using rule 53 (parameter -> id_list COLON ID .)


state 89

    (37) expression -> expression PLUS expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 37 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 37 (expression -> expression PLUS expression .)
    END             reduce using rule 37 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 37 (expression -> expression PLUS expression .)
    TO              reduce using rule 37 (expression -> expression PLUS expression .)
    DOWNTO          reduce using rule 37 (expression -> expression PLUS expression .)
    DO              reduce using rule 37 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83

  ! TIMES           [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]


state 90

    (38) expression -> expression MINUS expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 38 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 38 (expression -> expression MINUS expression .)
    END             reduce using rule 38 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 38 (expression -> expression MINUS expression .)
    TO              reduce using rule 38 (expression -> expression MINUS expression .)
    DOWNTO          reduce using rule 38 (expression -> expression MINUS expression .)
    DO              reduce using rule 38 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83

  ! TIMES           [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]


state 91

    (39) expression -> expression TIMES expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 39 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 39 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 39 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 39 (expression -> expression TIMES expression .)
    END             reduce using rule 39 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 39 (expression -> expression TIMES expression .)
    TO              reduce using rule 39 (expression -> expression TIMES expression .)
    DOWNTO          reduce using rule 39 (expression -> expression TIMES expression .)
    DO              reduce using rule 39 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]
  ! TIMES           [ shift and go to state 82 ]
  ! DIVIDE          [ shift and go to state 83 ]


state 92

    (40) expression -> expression DIVIDE expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 40 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 40 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 40 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 40 (expression -> expression DIVIDE expression .)
    END             reduce using rule 40 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 40 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 40 (expression -> expression DIVIDE expression .)
    DOWNTO          reduce using rule 40 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 40 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]
  ! TIMES           [ shift and go to state 82 ]
  ! DIVIDE          [ shift and go to state 83 ]


state 93

    (41) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    DOWNTO          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 41 (expression -> LPAREN expression RPAREN .)


state 94

    (33) for_statement -> FOR ID ASSIGNMENT expression direction . expression DO statement
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . NUMBER

    LPAREN          shift and go to state 73
    ID              shift and go to state 71
    NUMBER          shift and go to state 74

    expression                     shift and go to state 98

state 95

    (34) direction -> TO .

    LPAREN          reduce using rule 34 (direction -> TO .)
    ID              reduce using rule 34 (direction -> TO .)
    NUMBER          reduce using rule 34 (direction -> TO .)


state 96

    (35) direction -> DOWNTO .

    LPAREN          reduce using rule 35 (direction -> DOWNTO .)
    ID              reduce using rule 35 (direction -> DOWNTO .)
    NUMBER          reduce using rule 35 (direction -> DOWNTO .)


state 97

    (48) procedure_declaration -> PROCEDURE ID LPAREN parameters RPAREN SEMICOLON declarations . compound_statement SEMICOLON
    (25) compound_statement -> . BEGIN statement_list END

    BEGIN           shift and go to state 24

    compound_statement             shift and go to state 99

state 98

    (33) for_statement -> FOR ID ASSIGNMENT expression direction expression . DO statement
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    DO              shift and go to state 100
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83


state 99

    (48) procedure_declaration -> PROCEDURE ID LPAREN parameters RPAREN SEMICOLON declarations compound_statement . SEMICOLON

    SEMICOLON       shift and go to state 101


state 100

    (33) for_statement -> FOR ID ASSIGNMENT expression direction expression DO . statement
    (28) statement -> . simple_statement
    (29) statement -> . compound_statement
    (30) simple_statement -> . assignment_statement
    (31) simple_statement -> . for_statement
    (32) simple_statement -> . empty
    (25) compound_statement -> . BEGIN statement_list END
    (36) assignment_statement -> . ID EQUAL expression
    (33) for_statement -> . FOR ID ASSIGNMENT expression direction expression DO statement
    (54) empty -> .

    BEGIN           shift and go to state 24
    ID              shift and go to state 43
    FOR             shift and go to state 44
    END             reduce using rule 54 (empty -> .)
    SEMICOLON       reduce using rule 54 (empty -> .)

    statement                      shift and go to state 102
    simple_statement               shift and go to state 38
    compound_statement             shift and go to state 39
    assignment_statement           shift and go to state 40
    for_statement                  shift and go to state 41
    empty                          shift and go to state 42

state 101

    (48) procedure_declaration -> PROCEDURE ID LPAREN parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON .

    VAR             reduce using rule 48 (procedure_declaration -> PROCEDURE ID LPAREN parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON .)
    CONST           reduce using rule 48 (procedure_declaration -> PROCEDURE ID LPAREN parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON .)
    PROCEDURE       reduce using rule 48 (procedure_declaration -> PROCEDURE ID LPAREN parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON .)
    BEGIN           reduce using rule 48 (procedure_declaration -> PROCEDURE ID LPAREN parameters RPAREN SEMICOLON declarations compound_statement SEMICOLON .)


state 102

    (33) for_statement -> FOR ID ASSIGNMENT expression direction expression DO statement .

    END             reduce using rule 33 (for_statement -> FOR ID ASSIGNMENT expression direction expression DO statement .)
    SEMICOLON       reduce using rule 33 (for_statement -> FOR ID ASSIGNMENT expression direction expression DO statement .)

