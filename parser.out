Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSOLUTE
    ASM
    DESTRUCTOR
    EXTERNAL
    FILE
    FORWARD
    GOTO
    IMPLEMENTATION
    IN
    INLINE
    INTERFACE
    INTERRUPT
    LABEL
    NIL
    OBJECT
    OFF
    PACKED
    PRIVATE
    SET
    UNIT
    VIRTUAL
    WITH

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON uses_clause_opt block DOT
Rule 2     uses_clause_opt -> uses_clause
Rule 3     uses_clause_opt -> empty
Rule 4     unit_list -> unit_list COMMA ID
Rule 5     unit_list -> ID
Rule 6     uses_clause -> USES unit_list SEMICOLON
Rule 7     block -> declarations compound_statement
Rule 8     declarations -> declaration_list
Rule 9     declarations -> empty
Rule 10    declaration_list -> declaration_list declaration
Rule 11    declaration_list -> declaration
Rule 12    declaration -> var_declaration
Rule 13    declaration -> const_declaration
Rule 14    declaration -> type_declaration
Rule 15    declaration -> procedure_declaration
Rule 16    declaration -> function_declaration
Rule 17    var_declaration -> VAR var_declaration_list
Rule 18    var_declaration_list -> var_declaration_list var_decl
Rule 19    var_declaration_list -> var_decl
Rule 20    var_decl -> id_list COLON type SEMICOLON
Rule 21    id_list -> id_list COMMA ID
Rule 22    id_list -> ID
Rule 23    const_declaration -> CONST const_list
Rule 24    const_list -> const_list const_definition SEMICOLON
Rule 25    const_list -> const_definition SEMICOLON
Rule 26    const_definition -> ID EQUAL constant
Rule 27    formal_parameter_list_opt -> LPAREN formal_parameter_list RPAREN
Rule 28    formal_parameter_list_opt -> empty
Rule 29    formal_parameter_list -> formal_parameter_list SEMICOLON formal_parameter
Rule 30    formal_parameter_list -> formal_parameter
Rule 31    formal_parameter -> id_list COLON type
Rule 32    type_declaration -> TYPE type_list
Rule 33    type_list -> type_list type_definition SEMICOLON
Rule 34    type_list -> type_definition SEMICOLON
Rule 35    type_definition -> ID EQUAL type
Rule 36    type -> simple_type
Rule 37    type -> array_type
Rule 38    type -> record_type
Rule 39    type -> class_type
Rule 40    class_type -> CLASS class_body END
Rule 41    class_body -> class_member_list
Rule 42    class_member_list -> class_member_list class_member
Rule 43    class_member_list -> class_member
Rule 44    class_member -> class_variable_declaration
Rule 45    class_member -> constructor_declaration
Rule 46    class_member -> class_function_declaration
Rule 47    class_member -> class_procedure_declaration
Rule 48    class_variable_declaration -> ID COLON type SEMICOLON
Rule 49    constructor_declaration -> CONSTRUCTOR ID formal_parameter_list_opt SEMICOLON
Rule 50    class_function_declaration -> FUNCTION ID formal_parameter_list_opt COLON type SEMICOLON
Rule 51    function_declaration -> FUNCTION ID formal_parameter_list_opt COLON type SEMICOLON block SEMICOLON
Rule 52    procedure_declaration -> PROCEDURE ID formal_parameter_list_opt SEMICOLON block SEMICOLON
Rule 53    class_procedure_declaration -> PROCEDURE ID formal_parameter_list_opt SEMICOLON
Rule 54    simple_type -> subrange_type
Rule 55    simple_type -> type_identifier
Rule 56    subrange_type -> constant DOTDOT constant
Rule 57    array_type -> ARRAY LBRACKET index_type RBRACKET OF type
Rule 58    index_type -> simple_type
Rule 59    record_type -> RECORD record_fields END
Rule 60    record_fields -> field_list
Rule 61    field_list -> field_list field_declaration SEMICOLON
Rule 62    field_list -> field_declaration SEMICOLON
Rule 63    field_declaration -> id_list COLON type
Rule 64    type_identifier -> ID
Rule 65    type_identifier -> predefined_type
Rule 66    predefined_type -> INTEGER
Rule 67    predefined_type -> REAL
Rule 68    predefined_type -> BOOLEAN
Rule 69    predefined_type -> STRING
Rule 70    compound_statement -> BEGIN statement_list END
Rule 71    statement_list -> statement
Rule 72    statement_list -> statement_list SEMICOLON statement
Rule 73    statement -> simple_statement
Rule 74    statement -> structured_statement
Rule 75    simple_statement -> assignment_statement
Rule 76    simple_statement -> procedure_call_statement
Rule 77    simple_statement -> empty
Rule 78    assignment_statement -> variable ASSIGN expression
Rule 79    variable -> ID
Rule 80    expression_list -> expression
Rule 81    expression_list -> expression_list COMMA expression
Rule 82    procedure_call_statement -> procedure_call
Rule 83    procedure_call -> ID LPAREN args_optional RPAREN
Rule 84    args -> args COMMA expression
Rule 85    args -> expression
Rule 86    structured_statement -> compound_statement
Rule 87    structured_statement -> if_statement
Rule 88    structured_statement -> while_statement
Rule 89    structured_statement -> repeat_statement
Rule 90    structured_statement -> for_statement
Rule 91    structured_statement -> case_statement
Rule 92    structured_statement -> record_assignment
Rule 93    if_statement -> IF expression THEN statement else_part
Rule 94    else_part -> ELSE statement
Rule 95    else_part -> empty
Rule 96    while_statement -> WHILE expression DO statement
Rule 97    repeat_statement -> REPEAT statement_list UNTIL expression
Rule 98    for_statement -> FOR ID ASSIGN expression TO expression DO statement
Rule 99    for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement
Rule 100   case_statement -> CASE expression OF case_element_list else_clause_optional END
Rule 101   case_element_list -> case_element_list semicolon_optional case_element
Rule 102   case_element_list -> case_element
Rule 103   case_element -> case_label_list COLON statement
Rule 104   case_label_list -> case_label_list COMMA case_label
Rule 105   case_label_list -> case_label
Rule 106   case_label -> constant
Rule 107   else_clause_optional -> semicolon_optional ELSE statement semicolon_optional
Rule 108   else_clause_optional -> empty
Rule 109   semicolon_optional -> SEMICOLON
Rule 110   semicolon_optional -> empty
Rule 111   record_assignment -> ID DOT ID ASSIGN expression
Rule 112   expression -> expression PLUS expression
Rule 113   expression -> expression MINUS expression
Rule 114   expression -> expression TIMES expression
Rule 115   expression -> expression DIVIDE expression
Rule 116   expression -> expression DIVIDE_INT expression
Rule 117   expression -> expression MODULO expression
Rule 118   expression -> expression SHL expression
Rule 119   expression -> expression SHR expression
Rule 120   expression -> expression EQUAL expression
Rule 121   expression -> expression NEQUAL expression
Rule 122   expression -> expression LT expression
Rule 123   expression -> expression GT expression
Rule 124   expression -> expression LE expression
Rule 125   expression -> expression GE expression
Rule 126   expression -> expression AND expression
Rule 127   expression -> expression OR expression
Rule 128   expression -> expression XOR expression
Rule 129   expression -> NOT expression
Rule 130   expression -> LPAREN expression RPAREN
Rule 131   expression -> function_call
Rule 132   expression -> variable
Rule 133   expression -> INTEGER_CONST
Rule 134   expression -> REAL_CONST
Rule 135   expression -> STRING_LITERAL
Rule 136   function_call -> ID LPAREN args_optional RPAREN
Rule 137   args_optional -> args
Rule 138   args_optional -> empty
Rule 139   constant -> UNSIGNED_NUMBER
Rule 140   constant -> sign UNSIGNED_NUMBER
Rule 141   constant -> STRING_LITERAL
Rule 142   constant -> constant_identifier
Rule 143   sign -> PLUS
Rule 144   sign -> MINUS
Rule 145   constant_identifier -> ID
Rule 146   empty -> <empty>

Terminals, with rules where they appear

ABSOLUTE             : 
AND                  : 126
ARRAY                : 57
ASM                  : 
ASSIGN               : 78 98 99 111
BEGIN                : 70
BOOLEAN              : 68
CASE                 : 100
CLASS                : 40
COLON                : 20 31 48 50 51 63 103
COMMA                : 4 21 81 84 104
CONST                : 23
CONSTRUCTOR          : 49
DESTRUCTOR           : 
DIVIDE               : 115
DIVIDE_INT           : 116
DO                   : 96 98 99
DOT                  : 1 111
DOTDOT               : 56
DOWNTO               : 99
ELSE                 : 94 107
END                  : 40 59 70 100
EQUAL                : 26 35 120
EXTERNAL             : 
FILE                 : 
FOR                  : 98 99
FORWARD              : 
FUNCTION             : 50 51
GE                   : 125
GOTO                 : 
GT                   : 123
ID                   : 1 4 5 21 22 26 35 48 49 50 51 52 53 64 79 83 98 99 111 111 136 145
IF                   : 93
IMPLEMENTATION       : 
IN                   : 
INLINE               : 
INTEGER              : 66
INTEGER_CONST        : 133
INTERFACE            : 
INTERRUPT            : 
LABEL                : 
LBRACKET             : 57
LE                   : 124
LPAREN               : 27 83 130 136
LT                   : 122
MINUS                : 113 144
MODULO               : 117
NEQUAL               : 121
NIL                  : 
NOT                  : 129
OBJECT               : 
OF                   : 57 100
OFF                  : 
OR                   : 127
PACKED               : 
PLUS                 : 112 143
PRIVATE              : 
PROCEDURE            : 52 53
PROGRAM              : 1
RBRACKET             : 57
REAL                 : 67
REAL_CONST           : 134
RECORD               : 59
REPEAT               : 97
RPAREN               : 27 83 130 136
SEMICOLON            : 1 6 20 24 25 29 33 34 48 49 50 51 51 52 52 53 61 62 72 109
SET                  : 
SHL                  : 118
SHR                  : 119
STRING               : 69
STRING_LITERAL       : 135 141
THEN                 : 93
TIMES                : 114
TO                   : 98
TYPE                 : 32
UNIT                 : 
UNTIL                : 97
USES                 : 6
VAR                  : 17
VIRTUAL              : 
WHILE                : 96
WITH                 : 
XOR                  : 128
error                : 

Nonterminals, with rules where they appear

UNSIGNED_NUMBER      : 139 140
args                 : 84 137
args_optional        : 83 136
array_type           : 37
assignment_statement : 75
block                : 1 51 52
case_element         : 101 102
case_element_list    : 100 101
case_label           : 104 105
case_label_list      : 103 104
case_statement       : 91
class_body           : 40
class_function_declaration : 46
class_member         : 42 43
class_member_list    : 41 42
class_procedure_declaration : 47
class_type           : 39
class_variable_declaration : 44
compound_statement   : 7 86
const_declaration    : 13
const_definition     : 24 25
const_list           : 23 24
constant             : 26 56 56 106
constant_identifier  : 142
constructor_declaration : 45
declaration          : 10 11
declaration_list     : 8 10
declarations         : 7
else_clause_optional : 100
else_part            : 93
empty                : 3 9 28 77 95 108 110 138
expression           : 78 80 81 84 85 93 96 97 98 98 99 99 100 111 112 112 113 113 114 114 115 115 116 116 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 130
expression_list      : 81
field_declaration    : 61 62
field_list           : 60 61
for_statement        : 90
formal_parameter     : 29 30
formal_parameter_list : 27 29
formal_parameter_list_opt : 49 50 51 52 53
function_call        : 131
function_declaration : 16
id_list              : 20 21 31 63
if_statement         : 87
index_type           : 57
predefined_type      : 65
procedure_call       : 82
procedure_call_statement : 76
procedure_declaration : 15
program              : 0
record_assignment    : 92
record_fields        : 59
record_type          : 38
repeat_statement     : 89
semicolon_optional   : 101 107 107
sign                 : 140
simple_statement     : 73
simple_type          : 36 58
statement            : 71 72 93 94 96 98 99 103 107
statement_list       : 70 72 97
structured_statement : 74
subrange_type        : 54
type                 : 20 31 35 48 50 51 57 63
type_declaration     : 14
type_definition      : 33 34
type_identifier      : 55
type_list            : 32 33
unit_list            : 4 6
uses_clause          : 2
uses_clause_opt      : 1
var_decl             : 18 19
var_declaration      : 12
var_declaration_list : 17 18
variable             : 78 132
while_statement      : 88

